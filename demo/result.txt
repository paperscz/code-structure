src/index.ts
  633 executeCommandLine().then(() => {
    633 executeCommandLine().then(() => {
      async function executeCommandLine() { src/index.ts 476
        481 showToolVersion();
          function showToolVersion() { src/index.ts 23
            24 printInConsole(`Version: ${packageJson.version}`);
              function printInConsole(message: any) { src/index.ts 15
        487 globAsync(file)))));
          function globAsync(pattern: string) { src/index.ts 27
        496 printInConsole(file);
          function printInConsole(message: any) { src/index.ts 15
        539 getCodeStructure(node, {
          function getCodeStructure(node: ts.Node, context: Context, sourceFile: ts.SourceFile, file: string): Tree | undefined | Tree[] { src/index.ts 123
            140 getCodeStructureOfDefinition(identifier, context, file);
              function getCodeStructureOfDefinition(node: ts.Node, context: Context, file: string): Tree | Tree[] | undefined { src/index.ts 61
                103 getCodeStructure(statement, context, sourceFile, definition.fileName);
                  function getCodeStructure(node: ts.Node, context: Context, sourceFile: ts.SourceFile, file: string): Tree | undefined | Tree[] { src/index.ts 123
                104 pushIntoTrees(tree.children, statementTree);
                  function pushIntoTrees(trees: Tree[], tree: undefined | Tree | Tree[]) { src/index.ts 43
                111 getCodeStructure(definitionNode, context, sourceFile, definition.fileName);
                  function getCodeStructure(node: ts.Node, context: Context, sourceFile: ts.SourceFile, file: string): Tree | undefined | Tree[] { src/index.ts 123
            144 getCodeStructure(propertyAccessExpression.expression, context, sourceFile, file);
              function getCodeStructure(node: ts.Node, context: Context, sourceFile: ts.SourceFile, file: string): Tree | undefined | Tree[] { src/index.ts 123
            145 pushIntoTrees(propertyAccessTrees, expressionTree);
              function pushIntoTrees(trees: Tree[], tree: undefined | Tree | Tree[]) { src/index.ts 43
            147 getCodeStructureOfDefinition(propertyAccessExpression.name, context, file);
              function getCodeStructureOfDefinition(node: ts.Node, context: Context, file: string): Tree | Tree[] | undefined { src/index.ts 61
                103 getCodeStructure(statement, context, sourceFile, definition.fileName);
                  function getCodeStructure(node: ts.Node, context: Context, sourceFile: ts.SourceFile, file: string): Tree | undefined | Tree[] { src/index.ts 123
                104 pushIntoTrees(tree.children, statementTree);
                  function pushIntoTrees(trees: Tree[], tree: undefined | Tree | Tree[]) { src/index.ts 43
                111 getCodeStructure(definitionNode, context, sourceFile, definition.fileName);
                  function getCodeStructure(node: ts.Node, context: Context, sourceFile: ts.SourceFile, file: string): Tree | undefined | Tree[] { src/index.ts 123
            148 pushIntoTrees(propertyAccessTrees, nameTree);
              function pushIntoTrees(trees: Tree[], tree: undefined | Tree | Tree[]) { src/index.ts 43
            153 getCodeStructureOfDefinition(newExpression.expression, context, file);
              function getCodeStructureOfDefinition(node: ts.Node, context: Context, file: string): Tree | Tree[] | undefined { src/index.ts 61
                103 getCodeStructure(statement, context, sourceFile, definition.fileName);
                  function getCodeStructure(node: ts.Node, context: Context, sourceFile: ts.SourceFile, file: string): Tree | undefined | Tree[] { src/index.ts 123
                104 pushIntoTrees(tree.children, statementTree);
                  function pushIntoTrees(trees: Tree[], tree: undefined | Tree | Tree[]) { src/index.ts 43
                111 getCodeStructure(definitionNode, context, sourceFile, definition.fileName);
                  function getCodeStructure(node: ts.Node, context: Context, sourceFile: ts.SourceFile, file: string): Tree | undefined | Tree[] { src/index.ts 123
            157 getCodeStructure(callExpression.expression, context, sourceFile, file);
              function getCodeStructure(node: ts.Node, context: Context, sourceFile: ts.SourceFile, file: string): Tree | undefined | Tree[] { src/index.ts 123
            159 showSyntaxKind(callExpression.expression);
              function showSyntaxKind(node: ts.Node) { src/index.ts 39
                40 printInConsole(node.kind);
                  function printInConsole(message: any) { src/index.ts 15
            161 pushIntoTrees(tree.children, callTree);
              function pushIntoTrees(trees: Tree[], tree: undefined | Tree | Tree[]) { src/index.ts 43
            170 getCodeStructure(parameter, context, sourceFile, file);
              function getCodeStructure(node: ts.Node, context: Context, sourceFile: ts.SourceFile, file: string): Tree | undefined | Tree[] { src/index.ts 123
            171 pushIntoTrees(trees, parameterTree);
              function pushIntoTrees(trees: Tree[], tree: undefined | Tree | Tree[]) { src/index.ts 43
            178 getCodeStructure(forOfStatement.statement, context, sourceFile, file);
              function getCodeStructure(node: ts.Node, context: Context, sourceFile: ts.SourceFile, file: string): Tree | undefined | Tree[] { src/index.ts 123
            182 getCodeStructure(declaration.body, context, sourceFile, file) : undefined;
              function getCodeStructure(node: ts.Node, context: Context, sourceFile: ts.SourceFile, file: string): Tree | undefined | Tree[] { src/index.ts 123
            185 getCodeStructure(propertyAssignmentExpression.initializer, context, sourceFile, file);
              function getCodeStructure(node: ts.Node, context: Context, sourceFile: ts.SourceFile, file: string): Tree | undefined | Tree[] { src/index.ts 123
            189 getCodeStructure(prefixUnaryExpression.operand, context, sourceFile, file);
              function getCodeStructure(node: ts.Node, context: Context, sourceFile: ts.SourceFile, file: string): Tree | undefined | Tree[] { src/index.ts 123
            194 getCodeStructure(expression.name, context, sourceFile, file);
              function getCodeStructure(node: ts.Node, context: Context, sourceFile: ts.SourceFile, file: string): Tree | undefined | Tree[] { src/index.ts 123
            197 getCodeStructure(exportDeclaration.exportClause, context, sourceFile, file) : undefined;
              function getCodeStructure(node: ts.Node, context: Context, sourceFile: ts.SourceFile, file: string): Tree | undefined | Tree[] { src/index.ts 123
            228 getCodeStructure(expression.expression, context, sourceFile, file) : undefined;
              function getCodeStructure(node: ts.Node, context: Context, sourceFile: ts.SourceFile, file: string): Tree | undefined | Tree[] { src/index.ts 123
            235 getCodeStructure(statement, context, sourceFile, file);
              function getCodeStructure(node: ts.Node, context: Context, sourceFile: ts.SourceFile, file: string): Tree | undefined | Tree[] { src/index.ts 123
            236 pushIntoTrees(trees, childTree);
              function pushIntoTrees(trees: Tree[], tree: undefined | Tree | Tree[]) { src/index.ts 43
            240 getCodeStructure(ifStatement.expression, context, sourceFile, file);
              function getCodeStructure(node: ts.Node, context: Context, sourceFile: ts.SourceFile, file: string): Tree | undefined | Tree[] { src/index.ts 123
            241 pushIntoTrees(trees, ifTree);
              function pushIntoTrees(trees: Tree[], tree: undefined | Tree | Tree[]) { src/index.ts 43
            243 getCodeStructure(ifStatement.thenStatement, context, sourceFile, file);
              function getCodeStructure(node: ts.Node, context: Context, sourceFile: ts.SourceFile, file: string): Tree | undefined | Tree[] { src/index.ts 123
            244 pushIntoTrees(trees, thenTree);
              function pushIntoTrees(trees: Tree[], tree: undefined | Tree | Tree[]) { src/index.ts 43
            247 getCodeStructure(ifStatement.elseStatement, context, sourceFile, file);
              function getCodeStructure(node: ts.Node, context: Context, sourceFile: ts.SourceFile, file: string): Tree | undefined | Tree[] { src/index.ts 123
            248 pushIntoTrees(trees, elseTree);
              function pushIntoTrees(trees: Tree[], tree: undefined | Tree | Tree[]) { src/index.ts 43
            252 getCodeStructure(binaryExpression.left, context, sourceFile, file);
              function getCodeStructure(node: ts.Node, context: Context, sourceFile: ts.SourceFile, file: string): Tree | undefined | Tree[] { src/index.ts 123
            253 pushIntoTrees(trees, leftTree);
              function pushIntoTrees(trees: Tree[], tree: undefined | Tree | Tree[]) { src/index.ts 43
            255 getCodeStructure(binaryExpression.right, context, sourceFile, file);
              function getCodeStructure(node: ts.Node, context: Context, sourceFile: ts.SourceFile, file: string): Tree | undefined | Tree[] { src/index.ts 123
            256 pushIntoTrees(trees, rightTree);
              function pushIntoTrees(trees: Tree[], tree: undefined | Tree | Tree[]) { src/index.ts 43
            259 getCodeStructure(variableStatement.declarationList, context, sourceFile, file);
              function getCodeStructure(node: ts.Node, context: Context, sourceFile: ts.SourceFile, file: string): Tree | undefined | Tree[] { src/index.ts 123
            260 pushIntoTrees(trees, declarationListTree);
              function pushIntoTrees(trees: Tree[], tree: undefined | Tree | Tree[]) { src/index.ts 43
            264 getCodeStructure(span, context, sourceFile, file);
              function getCodeStructure(node: ts.Node, context: Context, sourceFile: ts.SourceFile, file: string): Tree | undefined | Tree[] { src/index.ts 123
            265 pushIntoTrees(trees, spanTree);
              function pushIntoTrees(trees: Tree[], tree: undefined | Tree | Tree[]) { src/index.ts 43
            270 getCodeStructure(element, context, sourceFile, file);
              function getCodeStructure(node: ts.Node, context: Context, sourceFile: ts.SourceFile, file: string): Tree | undefined | Tree[] { src/index.ts 123
            271 pushIntoTrees(trees, elementTree);
              function pushIntoTrees(trees: Tree[], tree: undefined | Tree | Tree[]) { src/index.ts 43
            276 getCodeStructure(property, context, sourceFile, file);
              function getCodeStructure(node: ts.Node, context: Context, sourceFile: ts.SourceFile, file: string): Tree | undefined | Tree[] { src/index.ts 123
            277 pushIntoTrees(trees, propertyTree);
              function pushIntoTrees(trees: Tree[], tree: undefined | Tree | Tree[]) { src/index.ts 43
            282 getCodeStructure(element, context, sourceFile, file);
              function getCodeStructure(node: ts.Node, context: Context, sourceFile: ts.SourceFile, file: string): Tree | undefined | Tree[] { src/index.ts 123
            283 pushIntoTrees(trees, elementTree);
              function pushIntoTrees(trees: Tree[], tree: undefined | Tree | Tree[]) { src/index.ts 43
            288 getCodeStructure(statement, context, sourceFile, file);
              function getCodeStructure(node: ts.Node, context: Context, sourceFile: ts.SourceFile, file: string): Tree | undefined | Tree[] { src/index.ts 123
            289 pushIntoTrees(trees, statementTree);
              function pushIntoTrees(trees: Tree[], tree: undefined | Tree | Tree[]) { src/index.ts 43
            293 getCodeStructure(switchStatement.expression, context, sourceFile, file);
              function getCodeStructure(node: ts.Node, context: Context, sourceFile: ts.SourceFile, file: string): Tree | undefined | Tree[] { src/index.ts 123
            294 pushIntoTrees(trees, switchTree);
              function pushIntoTrees(trees: Tree[], tree: undefined | Tree | Tree[]) { src/index.ts 43
            296 getCodeStructure(switchStatement.caseBlock, context, sourceFile, file);
              function getCodeStructure(node: ts.Node, context: Context, sourceFile: ts.SourceFile, file: string): Tree | undefined | Tree[] { src/index.ts 123
            297 pushIntoTrees(trees, caseTree);
              function pushIntoTrees(trees: Tree[], tree: undefined | Tree | Tree[]) { src/index.ts 43
            300 getCodeStructure(conditionalExpression.whenTrue, context, sourceFile, file);
              function getCodeStructure(node: ts.Node, context: Context, sourceFile: ts.SourceFile, file: string): Tree | undefined | Tree[] { src/index.ts 123
            301 pushIntoTrees(trees, trueTree);
              function pushIntoTrees(trees: Tree[], tree: undefined | Tree | Tree[]) { src/index.ts 43
            303 getCodeStructure(conditionalExpression.whenFalse, context, sourceFile, file);
              function getCodeStructure(node: ts.Node, context: Context, sourceFile: ts.SourceFile, file: string): Tree | undefined | Tree[] { src/index.ts 123
            304 pushIntoTrees(trees, falseTree);
              function pushIntoTrees(trees: Tree[], tree: undefined | Tree | Tree[]) { src/index.ts 43
            308 getCodeStructure(clause, context, sourceFile, file);
              function getCodeStructure(node: ts.Node, context: Context, sourceFile: ts.SourceFile, file: string): Tree | undefined | Tree[] { src/index.ts 123
            309 pushIntoTrees(trees, clauseTree);
              function pushIntoTrees(trees: Tree[], tree: undefined | Tree | Tree[]) { src/index.ts 43
            314 getCodeStructure(forStatement.initializer, context, sourceFile, file);
              function getCodeStructure(node: ts.Node, context: Context, sourceFile: ts.SourceFile, file: string): Tree | undefined | Tree[] { src/index.ts 123
            315 pushIntoTrees(trees, initializerTree);
              function pushIntoTrees(trees: Tree[], tree: undefined | Tree | Tree[]) { src/index.ts 43
            319 getCodeStructure(forStatement.condition, context, sourceFile, file);
              function getCodeStructure(node: ts.Node, context: Context, sourceFile: ts.SourceFile, file: string): Tree | undefined | Tree[] { src/index.ts 123
            320 pushIntoTrees(trees, conditionTree);
              function pushIntoTrees(trees: Tree[], tree: undefined | Tree | Tree[]) { src/index.ts 43
            324 getCodeStructure(forStatement.incrementor, context, sourceFile, file);
              function getCodeStructure(node: ts.Node, context: Context, sourceFile: ts.SourceFile, file: string): Tree | undefined | Tree[] { src/index.ts 123
            325 pushIntoTrees(trees, incrementorTree);
              function pushIntoTrees(trees: Tree[], tree: undefined | Tree | Tree[]) { src/index.ts 43
            328 getCodeStructure(forStatement.statement, context, sourceFile, file);
              function getCodeStructure(node: ts.Node, context: Context, sourceFile: ts.SourceFile, file: string): Tree | undefined | Tree[] { src/index.ts 123
            329 pushIntoTrees(trees, statementTree);
              function pushIntoTrees(trees: Tree[], tree: undefined | Tree | Tree[]) { src/index.ts 43
            332 getCodeStructure(tryStatement.tryBlock, context, sourceFile, file);
              function getCodeStructure(node: ts.Node, context: Context, sourceFile: ts.SourceFile, file: string): Tree | undefined | Tree[] { src/index.ts 123
            333 pushIntoTrees(trees, tryBlockTree);
              function pushIntoTrees(trees: Tree[], tree: undefined | Tree | Tree[]) { src/index.ts 43
            336 getCodeStructure(tryStatement.catchClause, context, sourceFile, file);
              function getCodeStructure(node: ts.Node, context: Context, sourceFile: ts.SourceFile, file: string): Tree | undefined | Tree[] { src/index.ts 123
            337 pushIntoTrees(trees, catchClauseTree);
              function pushIntoTrees(trees: Tree[], tree: undefined | Tree | Tree[]) { src/index.ts 43
            341 getCodeStructure(tryStatement.finallyBlock, context, sourceFile, file);
              function getCodeStructure(node: ts.Node, context: Context, sourceFile: ts.SourceFile, file: string): Tree | undefined | Tree[] { src/index.ts 123
            342 pushIntoTrees(trees, finallyBlockTree);
              function pushIntoTrees(trees: Tree[], tree: undefined | Tree | Tree[]) { src/index.ts 43
            348 getCodeStructure(declaration.initializer, context, sourceFile, file);
              function getCodeStructure(node: ts.Node, context: Context, sourceFile: ts.SourceFile, file: string): Tree | undefined | Tree[] { src/index.ts 123
            349 pushIntoTrees(trees, childTree);
              function pushIntoTrees(trees: Tree[], tree: undefined | Tree | Tree[]) { src/index.ts 43
            355 getCodeStructure(catchClause.variableDeclaration, context, sourceFile, file);
              function getCodeStructure(node: ts.Node, context: Context, sourceFile: ts.SourceFile, file: string): Tree | undefined | Tree[] { src/index.ts 123
            356 pushIntoTrees(trees, variableDeclarationTree);
              function pushIntoTrees(trees: Tree[], tree: undefined | Tree | Tree[]) { src/index.ts 43
            359 getCodeStructure(catchClause.block, context, sourceFile, file);
              function getCodeStructure(node: ts.Node, context: Context, sourceFile: ts.SourceFile, file: string): Tree | undefined | Tree[] { src/index.ts 123
            360 pushIntoTrees(trees, blockTree);
              function pushIntoTrees(trees: Tree[], tree: undefined | Tree | Tree[]) { src/index.ts 43
            363 getCodeStructure(forInStatement.initializer, context, sourceFile, file);
              function getCodeStructure(node: ts.Node, context: Context, sourceFile: ts.SourceFile, file: string): Tree | undefined | Tree[] { src/index.ts 123
            364 pushIntoTrees(trees, initializerTree);
              function pushIntoTrees(trees: Tree[], tree: undefined | Tree | Tree[]) { src/index.ts 43
            366 getCodeStructure(forInStatement.expression, context, sourceFile, file);
              function getCodeStructure(node: ts.Node, context: Context, sourceFile: ts.SourceFile, file: string): Tree | undefined | Tree[] { src/index.ts 123
            367 pushIntoTrees(trees, expressionTree);
              function pushIntoTrees(trees: Tree[], tree: undefined | Tree | Tree[]) { src/index.ts 43
            369 getCodeStructure(forInStatement.statement, context, sourceFile, file);
              function getCodeStructure(node: ts.Node, context: Context, sourceFile: ts.SourceFile, file: string): Tree | undefined | Tree[] { src/index.ts 123
            370 pushIntoTrees(trees, statementTree);
              function pushIntoTrees(trees: Tree[], tree: undefined | Tree | Tree[]) { src/index.ts 43
            373 getCodeStructure(whileStatement.statement, context, sourceFile, file);
              function getCodeStructure(node: ts.Node, context: Context, sourceFile: ts.SourceFile, file: string): Tree | undefined | Tree[] { src/index.ts 123
            374 pushIntoTrees(trees, statementTree);
              function pushIntoTrees(trees: Tree[], tree: undefined | Tree | Tree[]) { src/index.ts 43
            376 getCodeStructure(whileStatement.expression, context, sourceFile, file);
              function getCodeStructure(node: ts.Node, context: Context, sourceFile: ts.SourceFile, file: string): Tree | undefined | Tree[] { src/index.ts 123
            377 pushIntoTrees(trees, expressionTree);
              function pushIntoTrees(trees: Tree[], tree: undefined | Tree | Tree[]) { src/index.ts 43
            380 getCodeStructure(elementAccessExpression.expression, context, sourceFile, file);
              function getCodeStructure(node: ts.Node, context: Context, sourceFile: ts.SourceFile, file: string): Tree | undefined | Tree[] { src/index.ts 123
            381 pushIntoTrees(trees, statementTree);
              function pushIntoTrees(trees: Tree[], tree: undefined | Tree | Tree[]) { src/index.ts 43
            384 getCodeStructure(elementAccessExpression.argumentExpression, context, sourceFile, file);
              function getCodeStructure(node: ts.Node, context: Context, sourceFile: ts.SourceFile, file: string): Tree | undefined | Tree[] { src/index.ts 123
            385 pushIntoTrees(trees, argumentExpressionTree);
              function pushIntoTrees(trees: Tree[], tree: undefined | Tree | Tree[]) { src/index.ts 43
            389 getCodeStructure(functionExpression.body, context, sourceFile, file);
              function getCodeStructure(node: ts.Node, context: Context, sourceFile: ts.SourceFile, file: string): Tree | undefined | Tree[] { src/index.ts 123
            390 pushIntoTrees(trees, bodyTree);
              function pushIntoTrees(trees: Tree[], tree: undefined | Tree | Tree[]) { src/index.ts 43
            393 getCodeStructure(functionExpression.name, context, sourceFile, file);
              function getCodeStructure(node: ts.Node, context: Context, sourceFile: ts.SourceFile, file: string): Tree | undefined | Tree[] { src/index.ts 123
            394 pushIntoTrees(trees, nameTree);
              function pushIntoTrees(trees: Tree[], tree: undefined | Tree | Tree[]) { src/index.ts 43
            419 showSyntaxKind(node);
              function showSyntaxKind(node: ts.Node) { src/index.ts 39
                40 printInConsole(node.kind);
                  function printInConsole(message: any) { src/index.ts 15
        544 pushIntoTrees(trees, tree);
          function pushIntoTrees(trees: Tree[], tree: undefined | Tree | Tree[]) { src/index.ts 43
        552 printInConsole(`${(Date.now() - now) / 1000.0} s`);
          function printInConsole(message: any) { src/index.ts 15
        581 getJsonResult(tree)),
          function getJsonResult(tree: Tree): JsonResult { src/index.ts 445
            458 getJsonResult(child));
              function getJsonResult(tree: Tree): JsonResult { src/index.ts 445
        588 printInConsole(error);
          function printInConsole(message: any) { src/index.ts 15
        600 printInConsole(error);
          function printInConsole(message: any) { src/index.ts 15
        617 getTextResult(tree, 1);
          function getTextResult(tree: Tree, intent: number) { src/index.ts 426
            440 getTextResult(child, intent + 1);
              function getTextResult(tree: Tree, intent: number) { src/index.ts 426
        624 printInConsole(error);
          function printInConsole(message: any) { src/index.ts 15
  634 printInConsole("code-structure success.");
    function printInConsole(message: any) { src/index.ts 15
  636 printInConsole(error);
    function printInConsole(message: any) { src/index.ts 15
